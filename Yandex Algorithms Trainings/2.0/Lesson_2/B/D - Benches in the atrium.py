# считываем данные
len_bench, blocks_count = map(int, input().split())  # длина лавочки, количество блоков
blocks_dist = list(map(int, input().split()))  # расстояние блока от левого конца лавочки

lf = 0  # левый указатель
# пока не зашли за границы массива и не перешли середину лавочки - увеличиваем левый указатель
# lf будет указывать на переход середины слева или саму середину лавочки, поэтому нужно учесть длину блока, len_bench - 1
while lf < blocks_count - 1 and blocks_dist[lf] * 2 < len_bench - 1:
    lf += 1

rg = blocks_count - 1  # правый указатель
# пока не зашли за границы массива и не перешли середину лавочки - уменьшаем правый указатель
# rg указывает на переход середины/середину справа, поэтому длину блока учитывать не надо
while rg > 0 and blocks_dist[rg] * 2 >= len_bench:
    rg -= 1

# ответ
# если нашли средний блок - выводим его
if blocks_dist[rg] == blocks_dist[lf]:
    print(blocks_dist[rg])
# иначе выводим сначала блок правого указателя, потом левого, так как они сойдутся и поменяются местами
else:
    print(blocks_dist[rg], blocks_dist[lf])