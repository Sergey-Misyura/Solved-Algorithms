def traverse(node, res, path=""):
    """
    Функция обхода дерева
    :param node: текущий узел дерева
    :param res: массив путей к узлам
    :param path: текущий путь до узла
    :return: обновляет res, добавляя путь к каждому узлу
    """
    if not node[0] and not node[1]:
        res.append(f'{path}')  # если нет потомков, добавляем путь к res
    if node[0]:  # для левого потомку идем рекурсивно налево
        traverse(node[0], res, f'{path}{0}')
    if node[1]:  # для правого потомку идем рекурсивно направо
        traverse(node[1], res, f'{path}{1}')

# считываем данные
with open('input.txt', 'r') as f:
    f.readline()
    answer = []  # массив ответа
    for line in f.readlines():  # проходим по обходам дерева
        dirs = [sym for sym in line]  # получаем направления обхода

        tree = [[[], [], None, 0]]  # массив дерева, [левое_поддерево, правое_поддерево, родитель, флаг_потомка: левый, правый]
        cur = tree[0]  # текущий узел дерева

        for direct in dirs:  # проходим по направлениям
            if direct == 'D':  # если направление вниз
                new_elem = [[], [], cur, 'lf']  # создаем левого потомка дерева
                cur[0] = new_elem  # добавляем потомка в массив родителя на место левого потомка
                cur = new_elem  # переходим к этому потомку
            elif direct == 'U':  # если направление вверх
                while cur[3] == 'rg':  # пока в правом потомке, выходим наверх
                    cur = cur[2]
                cur = cur[2]  # переходим к родителю, когда вышли
                new_elem = [[], [], cur, 'rg']  # создаем правого потомка
                cur[1] = new_elem  # добавляем потомка в массив родителя на место правого потомка
                cur = new_elem  # переходим к этому потомку

        tree = tree[0]  # переходим к корню дерева
        res = []  # массив результата обхода
        traverse(tree, res)  # делаем обход дерева
        answer += [len(res)] + res  # добавляем в ответ длину результата и результат

# ответ
print(*answer, sep='\n')
