# считываем данные
x = int(input().strip())  # количество ваших солдат на старте игры
y = int(input().strip())  # количество очков здоровья казармы
p = int(input().strip())  # количество производимых за раунд казармой солдат

if x >= y:  # если с 1 хода ломаем казарму - ответ 1
    print(1)
else:  # общий случай
    round = 1  # номер раунда
    y -= x  # уменьшаем очки казармы
    cur_enemies = 0  # текущее число противников
    prev_x, prev_y, prev_cur_enemies = x, y, cur_enemies  # пердыдущие значения: x, y, cur_enemies
    cycle = False  # флаг цикла
    # пока не зациклились, у нас есть солдаты и не (можем сломать казарму, а потом добить всех противников (посчитанный коэф. 1.62))
    # уменьшаем число противников, а на остаток бьем казарму
    while not cycle and x > 0 and not (y <= x and cur_enemies + p - (x - y) <= (x - (cur_enemies + p - (x - y))) * 1.62):  # пока не можем сломать казарму, убиваем солдат
        round += 1  # увеличиваем раунд
        cur_enemies += p  # увелчиваем cur_enemies c последнего раунда
        diff = max(0, x - cur_enemies)  # остаток после удара по солдатам
        cur_enemies = max(0, cur_enemies - x)  # обновленное число солдат проивника
        y -= diff  # уменьшаем значение очков здоровья казармы
        x -= cur_enemies  # уменьшаем число солдат x
        if x == prev_x and y == prev_y and prev_cur_enemies == cur_enemies:  # проверка на цикл
            cycle = True
        prev_x, prev_y, prev_cur_enemies = x, y, cur_enemies  # сохранение предыдущих значений
    if x < 0 or cycle:  # если цикл или убили солдат x - ответ -1
        print(-1)
    else:  # иначе проверяем два варианта
        # 1. ломаем казарму и деремся до конца
        x1, y1, cur_enemies1, r1 = x, y, cur_enemies + p, round  # копия значений для 1 варианта
        while x1 > 0 and cur_enemies1 > 0:  # пока есть солдаты x1 и есть противники - продолжаем драться
            r1 += 1  # увеличиваем раунды
            diff = x1 - y1  # остаток от уменьшения здоровья казармы
            y1 = 0  # значение здоровья казармы в 0
            cur_enemies1 -= diff  # количество текущих противников
            x1 -= cur_enemies1  # уменьшение количества солдат

        # 2. делаем еще 1 ход, потом ломаем казарму и деремся до конца
        x2, y2, cur_enemies2, r2 = x, y, cur_enemies, round  # копия значений для 2 варианта
        r2 += 1  # увеличиваем число раундов
        cur_enemies2 += p  # увеличиваем число противников с прошлого раунда
        diff = max(0, x2 - cur_enemies2)  # остаток от убийства противников
        cur_enemies2 = max(0, cur_enemies2 - x2)  # текущее значение противников
        y2 -= diff  # уменьшаем значение здоровья казармы
        x2 -= cur_enemies2  # уменьшаем x
        cur_enemies2 += p  # увеличиваем cur_enemies2
        while x2 > 0 and cur_enemies2 > 0:  # пока есть солдаты x1 и есть противники - продолжаем драться
            r2 += 1
            diff = x2 - y2
            y2 = 0
            cur_enemies2 -= diff
            x2 -= cur_enemies2

        # ответ
        if x1 <= 0 and x2 <= 0:  # если в обоих вариантах солдат x убили - ответ -1
            print(-1)
        elif x1 <= 0:  # если в первом варианте солдат x убили - возвращаем второй вариант
            print(r2)
        elif x2 <= 0:  # если во втором варианте солдат x убили - возвращаем первый вариант
            print(r1)
        else:  # иначе выбираем меньшее количество раундов
            print(min(r1, r2))
